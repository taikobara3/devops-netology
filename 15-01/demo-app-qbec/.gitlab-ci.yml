stages:
  - build
  - deploy
build:   # Сборка контейнера приложения и отправка в dockerhub
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.22.0-debug # Образ kaniko для сборки докер контейнера без докера
    entrypoint: [""]
  before_script:
    - echo "PREPARE. Using registry..."
    - if [[ -z ${CI_COMMIT_TAG} ]];
          then ITAG=${CI_COMMIT_SHORT_SHA};
          else ITAG=${CI_COMMIT_TAG};
        fi; # Формирование тега для образа приложения 
    - echo ${ITAG} # Вспомогательный printout
    - mkdir -p /kaniko/.docker # Создаем директорию конфигурации под kaniko
    - echo "{\"auths\":{\"${MY_DOCKER_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USER}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json # Формирование файла авторизации в докерхаб для kaniko 
    - cat /kaniko/.docker/config.json
  script:
    - |
    - echo "Building... "
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKER_REGISTRY_USER}/${MY_PROJECT_TITLE}:${ITAG}" # Сборка образа приложения c тегом коммита, и отправка в dockerhub
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKER_REGISTRY_USER}/${MY_PROJECT_TITLE}:latest" # Сборка образа приложения с тегом latest, и отправка в dockerhub
  only:
  - tags
deploy:
  stage: deploy
  image: tabwizard/k8s-tools
  before_script:
    - export KUBECONFIG=$KUBECONFIG_FILE # Импорт конфигурации кластера k8s из переменной
  script:
    - cd ${CI_PROJECT_DIR}/qbec
    - qbec delete taiko3 --yes # Удаление предыдущей сборки. Необходимо в данном случае потому что теги одинаковы
    - sleep 20
    - qbec apply taiko3 --yes  # Разворачивание новой сборки, созданной на предыдущем этапе
    - sleep 20
  tags:
    - taiko3
  only:
  - tags
